Coding Challenge: Bottle Sets

By Fernando Meneses, 2025-01.

DESCRIPTION

You are a seller of liquid products, which can be stored in bottles of any size. Recently, you received an unusual order: a client requests 'as many sets of bottles as possible, where each set consists of one or two bottles, and all sets must have the same total volume'. The volume, measured in litres, can be any integer value, for example 1L or 5L, what matters is that you maximize the number of sets, as the mysterious client will pay you a very high amount per set, regardless of the liquid volume.

TASK

Design an algorithm that takes as input a list of bottle capacities (in litres) available in your store, and returns the maximum number of sets that can be made. Each set must have one or two bottles, and the total volume of each set must be the same across all sets.

EXAMPLES

Input: [1,1,2,2,5,5]
Output: 3
Explanation: you can make three sets with 2L each: [1,1] + [2] + [2].

Input: [1,1,3,5]
Output: 2
Explanation: you can make two sets with 1L each: [1] + [1].

Input: [1,2,5,6,10,11,20]
Output: 3
Explanation: you can make three sets with 11L each: [1,10] + [5,6] + [11].

Input: [12]
Output: 1
Explanation: you can make a single set with 12L: [12].

Input: [1,1,5,5]
Output: 2
Explanation: there are three multiple configurations for the solution, all of them equally valid and all of them sharing the same output:
- You can make two sets of 1L: [1] + [1]
- You can make two sets of 5L: [5] + [5]
- You can make two sets of 6L: [6] + [6]

CONSTRAINS:

* The input list will only have integer values within the range 1 to 100.
* The input list will have from 1 to 100 elements.
